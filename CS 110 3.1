# Defining a max subarray function and the incremental max subarray

def max_subarray_sum(L):
    max_so_far, curr_max = L[0], L[0]
    for i in range (1, len(L)):
        curr_max = max(L[i], curr_max + L[i])
        max_so_far = max(max_so_far, curr_max)
    return max_so_far

def incremental_max_subarray(x, mx):
    curr_max = max(mx, mx + x[-1])
    return curr_max


# Testing the algorithm
y1 = [-79, -58, -61, 11, -61, 47, 84, 77, -34, 76]
max_subarray_sum(y1)
# OUTPUT = 250


# Appending an extra positive value at the end of the list
y1.append(10)
incremental_max_subarray(y1, 250)
# OUTPUT = 260


# Appending an extra negative value at the end of the list
y2 = [-79, -58, -61, 11, -61, 47, 84, 77, -34, 76]
y2.append(-10)
incremental_max_subarray(y2, 250)
# OUTPUT = 250
